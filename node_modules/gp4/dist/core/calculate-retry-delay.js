const calculateRetryDelay = ({ attemptCount, retryOptions, error, retryAfter, computedValue }) =>
    error.name === 'RetryError' ? 1 :
    attemptCount > retryOptions.limit ? 0 :
    !retryOptions.methods.includes(error.options.method) || 
    (!retryOptions.errorCodes.includes(error.code) && 
        !(error.response && retryOptions.statusCodes.includes(error.response.statusCode))) ? 0 :
    error.response ? (
    retryAfter ? (retryAfter > computedValue ? 0 : retryAfter) : error.response.statusCode === 413 ? 0 : null
    ) : null ??
    Math.min(2 ** (attemptCount - 1) * 1000, retryOptions.backoffLimit) + Math.random() * retryOptions.noise;
export default calculateRetryDelay;